---
interface Props {
  title: string;
  description: string;
  pubDate: Date;
  author: string;
  image?: string;
  slug: string;
  tags?: string[];
}

const { title, description, pubDate, author, image, slug, tags } = Astro.props;

// Formatage de la date
const formattedDate = new Intl.DateTimeFormat('fr-FR', {
  year: 'numeric',
  month: 'long',
  day: 'numeric'
}).format(new Date(pubDate));

// Couleurs al√©atoires pour les gradients de placeholder
const gradients = [
  'from-blue-400 to-blue-600',
  'from-purple-400 to-purple-600',
  'from-green-400 to-green-600',
  'from-orange-400 to-orange-600',
  'from-pink-400 to-pink-600'
];
const randomGradient = gradients[Math.floor(Math.random() * gradients.length)];
---

<article class="group bg-white rounded-xl shadow-lg hover:shadow-2xl transition-all duration-300 border border-gray-100 hover:border-blue-200 overflow-hidden">
  <!-- Image de l'article ou placeholder -->
  <div class="relative overflow-hidden">
    {image ? (
      <img 
        src={image} 
        alt={title}
        class="w-full h-48 object-cover group-hover:scale-105 transition-transform duration-300"
        loading="lazy"
      />
    ) : (
      <div class={`w-full h-48 bg-gradient-to-br ${randomGradient} flex items-center justify-center group-hover:scale-105 transition-transform duration-300`}>
        <svg class="w-16 h-16 text-white opacity-50" fill="none" stroke="currentColor" viewBox="0 0 24 24">
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 20H5a2 2 0 01-2-2V6a2 2 0 012-2h10a2 2 0 012 2v1m2 13a2 2 0 01-2-2V7m2 13a2 2 0 002-2V9a2 2 0 00-2-2h-2m-4-3H9M7 16h6M7 8h6v4H7V8z"></path>
        </svg>
      </div>
    )}
    <div class="absolute inset-0 bg-gradient-to-t from-black/20 to-transparent opacity-0 group-hover:opacity-100 transition-opacity duration-300"></div>
  </div>
  
  <!-- Contenu de l'article -->
  <div class="p-6">
    <!-- Tags -->
    {tags && tags.length > 0 && (
      <div class="flex flex-wrap gap-2 mb-4">
        {tags.slice(0, 3).map((tag) => (
          <span class="px-3 py-1 bg-blue-100 text-blue-600 text-sm font-medium rounded-full">
            {tag}
          </span>
        ))}
      </div>
    )}
    
    <!-- Titre -->
    <h3 class="text-xl font-bold text-gray-900 mb-3 group-hover:text-blue-600 transition-colors duration-300 line-clamp-2">
      {title}
    </h3>
    
    <p class="text-gray-600 mb-4 line-clamp-3 leading-relaxed">
      {description}
    </p>
    
    <div class="flex items-center justify-between text-sm text-gray-500 mb-4">
      <div class="flex items-center">
        <svg class="w-4 h-4 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M16 7a4 4 0 11-8 0 4 4 0 018 0zM12 14a7 7 0 00-7 7h14a7 7 0 00-7-7z"></path>
        </svg>
        <span>{author}</span>
      </div>
      <div class="flex items-center">
        <svg class="w-4 h-4 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M8 7V3m8 4V3m-9 8h10M5 21h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v12a2 2 0 002 2z"></path>
        </svg>
        <span>{formattedDate}</span>
      </div>
    </div>
    
    <a 
      href={`/blog/${slug}`} 
      class="inline-flex items-center text-blue-600 hover:text-blue-800 font-semibold group-hover:translate-x-2 transition-all duration-300"
    >
      Lire l'article
      <svg class="ml-2 w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 5l7 7-7 7"></path>
      </svg>
    </a>
  </div>
</article>

<style>
  .line-clamp-2 {
    display: -webkit-box;
    -webkit-line-clamp: 2;
    -webkit-box-orient: vertical;
    overflow: hidden;
  }
  
  .line-clamp-3 {
    display: -webkit-box;
    -webkit-line-clamp: 3;
    -webkit-box-orient: vertical;
    overflow: hidden;
  }
</style>